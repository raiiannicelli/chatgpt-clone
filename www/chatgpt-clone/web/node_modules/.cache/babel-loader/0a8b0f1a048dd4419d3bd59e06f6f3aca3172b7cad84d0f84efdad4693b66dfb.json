{"ast":null,"code":"var _jsxFileName = \"/home/chatgpt/Documents/chat/www/chatgpt-clone/web/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport './styles/App.css';\nimport './styles/reset.css';\nimport { makeRequest } from './api/api';\nimport { SideMenu } from './components/SideMenu/SideMenu';\nimport { ChatMessage } from './components/ChatMessage/ChatMessage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [input, setInput] = useState(\"\");\n  const [chatlog, setChatlog] = useState([{\n    user: \"gpt\",\n    message: \"Como posso te ajudar?\"\n  }]);\n  async function handleSubmit(e) {\n    e.preventDefault();\n    let response = await makeRequest({\n      prompt: input\n    });\n    response = response.data.split('\\n').map(line => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: line\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 54\n    }, this));\n    setChatlog([...chatlog, {\n      user: 'me',\n      message: `${input}`\n    }, {\n      user: 'gpt',\n      message: response\n    }]);\n    setInput(\"\");\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(SideMenu, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"chatbox\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-log\",\n        children: chatlog.map((message, index) => /*#__PURE__*/_jsxDEV(ChatMessage, {\n          message: message\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 43\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-input-holder\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            rows: \"1\",\n            className: \"chat-input-textarea\",\n            value: input,\n            onChange: e => setInput(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"sio/b/D49Q34hZ61GGN9O09uV6M=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","makeRequest","SideMenu","ChatMessage","jsxDEV","_jsxDEV","App","_s","input","setInput","chatlog","setChatlog","user","message","handleSubmit","e","preventDefault","response","prompt","data","split","map","line","children","fileName","_jsxFileName","lineNumber","columnNumber","className","index","onSubmit","rows","value","onChange","target","_c","$RefreshReg$"],"sources":["/home/chatgpt/Documents/chat/www/chatgpt-clone/web/src/App.js"],"sourcesContent":["import { useState } from 'react'\n\nimport './styles/App.css'\nimport './styles/reset.css'\n\nimport { makeRequest } from './api/api'\nimport { SideMenu } from './components/SideMenu/SideMenu'\nimport { ChatMessage } from './components/ChatMessage/ChatMessage'\n\nfunction App() {\n\n  const [input, setInput] = useState(\"\")\n  const [chatlog, setChatlog] = useState([{\n    user:\"gpt\", \n    message:\"Como posso te ajudar?\"\n  }])\n\n  async function handleSubmit(e){\n      e.preventDefault()\n\n      let response = await makeRequest({prompt: input})\n     \n      response = response.data.split('\\n').map(line=><p>{line}</p>)\n\n      setChatlog([...chatlog, {\n        user:'me',message:`${input}`},\n        {user:'gpt', message: response}])\n      setInput(\"\")\n  }\n\n  return (\n    <div className=\"App\">\n      <SideMenu></SideMenu>\n      <section className='chatbox'>\n        \n        <div className='chat-log'>\n          {chatlog.map((message, index)=>(<ChatMessage key={index} message={message}/>))}\n        </div>\n\n        <div className='chat-input-holder'>\n          <form onSubmit={handleSubmit}>\n            <input\n              rows='1'\n              className='chat-input-textarea'\n              value={input}\n              onChange={e=>setInput(e.target.value)}\n              >\n            </input>\n          </form>\n        </div>\n\n      </section>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}